How did viewing a diff between two versions of a file help you see the bug that was introduced?
it Tells you only the parts of the file and rows where there is difference among the 2 files

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
It allows to compare versions, find out bugs, typo, go back to previous solutions, ideas, track progress, etc...

What do you think are the pros and cons of manually choosing when to create a commit, 
like you do in Git, vs having versions automatically saved, like Google docs does?
PRO: flexibility
CONS: user mistake

Why do you think some version control systems, like Git, 
allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
To allow tracking and versioning logical group of files

Git Errors and Warnings Solution

Should not be doing an octopus 
Octopus is a strategy Git uses to combine many different versions of code together. This message can appear if you try to use this strategy in an inappropriate situation.

You are in 'detached HEAD' state 
HEAD is what Git calls the commit you are currently on. You can “detach” the HEAD by switching to a previous commit, which we’ll see in the next video. Despite what it sounds like, it’s actually not a bad thing to detach the HEAD. Git just warns you so that you’ll realize you’re doing it.

Panic! (the 'impossible' happened) 
This is a real error message, but it’s not output by Git. Instead it’s output by GHC, the compiler for a programming language called Haskell. It’s reserved for particularly surprising errors!

Takeaway

We hope these errors and warnings amused you as much as they amused us! Now that you know what kind of errors Git can throw, you’re ready to start checking out previous versions of files with Caroline.

How might using version control make you more confident to make changes that could break something?
you can easily revert back to previous version or to next

Now that you have your workspace set up, what do you want to try using Git for?
Version Control!